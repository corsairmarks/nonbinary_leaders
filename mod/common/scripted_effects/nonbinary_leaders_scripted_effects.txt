# this = leader
print_leader_info = {
	# optimize_memory # specifically not optimized to get cleaner log text
	log = "------------------------------"
	log = "\\[This.GetTitle] \\[This.GetName], \\[This.GetAge]-year old \\[This.Species.GetName] (\\[This.Species.GetSpeciesGender]) \\[This.GetGender]"
	if = {
		limit = { has_leader_flag = presents_fem }
		log = "...\\[This.GetSubjectPronoun] present\\[This.GetSXX] feminine"
	}
	else_if = {
		limit = { has_leader_flag = presents_masc }
		log = "...\\[This.GetSubjectPronoun] present\\[This.GetSXX] masculine"
	}
	else = {
		log = "...\\[This.GetSubjectPronoun] present\\[This.GetSXX] as the default for \\[This.GetPossPronoun] gender (\\[This.GetGender])"
	}
	if = {
		limit = { exists = owner }
		owner = { log = "...\\[Prev.GetSubjectPronoun] belong\\[Prev.GetSXX] to country \\[This.GetRealName]" }
	}
	switch = {
		trigger = leader_class
		governor = {
			log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] a governor"
			if = {
				limit = { exists = sector }
				sector = { log = "...and \\[Prev.GetSubjectPronoun] govern\\[Prev.GetSXX] the \\[This.GetName] sector" }
			}
		}
		scientist = {
			log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] a scientist"
			switch = {
				trigger = is_researching_area
				physics = { log = "...and \\[This.GetSubjectPronoun] \\[This.GetIsAre] researching physics" }
				society = { log = "...and \\[This.GetSubjectPronoun] \\[This.GetIsAre] researching society"}
				engineering = { log = "...and \\[This.GetSubjectPronoun] \\[This.GetIsAre] researching engineering"}
				default = { log = "...and \\[This.GetSubjectPronoun] \\[This.GetIsAre] NOT researching" }
			}
			if = {
				limit = { exists = fleet }
				fleet = { log = "...and \\[Prev.GetSubjectPronoun] command\\[Prev.GetSXX] fleet \\[This.GetName]" }
			}
		}
		admiral = {
			log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] an admiral"
			if = {
				limit = { exists = fleet }
				fleet = { log = "...and \\[Prev.GetSubjectPronoun] command\\[Prev.GetSXX] fleet \\[This.GetName]" }
			}
		}
		general = {
			log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] a general"
			if = {
				limit = { exists = fleet }
				fleet = { log = "...and \\[Prev.GetSubjectPronoun] command\\[Prev.GetSXX] fleet \\[This.GetName]" }
			}
			owner = {
				random_owned_army = {
					limit = {
						exists = leader
						leader = { is_same_value = prevprevprev }
					}
					log = "...and \\[PrevPrev.GetSubjectPronoun] command\\[PrevPrev.GetSXX] army \\[This.GetName]"
				}
			}
		}
		envoy = { log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] an envoy" }
		default = { log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] an unknown class" }
	}
	if = {
		limit = { owner = { any_pool_leader = { is_same_value = prevprev } } }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] available to hire (pool)"
	}
	if = {
		limit = { owner = { any_owned_leader = { is_same_value = prevprev } } }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] hired (owned)"
	}
	if = {
		limit = { is_idle = yes }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] idle"
	}
	else = {
		log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] assigned"
	}
	if = {
		limit = { exists = fleet }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetHasHave] a fleet scope (\\[This.Fleet.GetName])"
	}
	if = {
		limit = { exists = planet }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetHasHave] a planet scope (\\[This.Planet.GetName])"
	}
	if = {
		limit = { is_gestalt = yes }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetHasHave] gestalt ethos"
	}
	else_if = {
		limit = { is_militarist = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] militarist ethos"
	}
	else_if = {
		limit = { is_egalitarian = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] egalitarian ethos"
	}
	else_if = {
		limit = { is_materialist = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] materialist ethos"
	}
	else_if = {
		limit = { is_pacifist = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] pacifist ethos"
	}
	else_if = {
		limit = { is_xenophile = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] xenophile ethos"
	}
	else_if = {
		limit = { is_authoritarian = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] authoritarian ethos"
	}
	else_if = {
		limit = { is_spiritualist = yes }
		log = "...\\[This.GetSubjectPronoun] follow\\[This.GetSXX] spiritualist ethos"
	}
	if = {
		limit = { exists = pop_faction }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetHasHave] a pop_faction scope"
		pop_faction = { log = "...which is named \\[This.GetName]" }
	}
	if = {
		limit = { is_event_leader = yes }
		log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] an event leader"
	}
	else = {
		log = "...\\[This.GetSubjectPronoun] \\[This.GetIsAre] NOT an event leader"
	}
	log = "------------------------------"
}

# this = leader
set_leader_flag_gender = {
	optimize_memory
	switch = {
		trigger = gender
		indeterminable = { set_leader_flag = gender_indeterminable }
		female = { set_leader_flag = gender_female }
		male = { set_leader_flag = gender_male }
		default = { set_leader_flag = gender_unknown }
	}
}

# this = leader
randomize_gender_presentation_if_unset = {
	optimize_memory
	if = {
		limit = { has_gender_presentation_flag = no }
		random_list = {
			10 = {
				modifier = {
					factor = 9
					gender = female
				}
				set_leader_flag = presents_fem
				if = {
					limit = { has_global_flag = nonbinary_leaders_enable_tracing }
					if = {
						limit = { gender = female }
						log = "...\\[This.GetSubjectPronoun] already presented as feminine."
					}
					else = {
						log = "...\\[This.GetSubjectPronoun] now present\\[This.GetSXX] as feminine."
					}
				}
			}
			10 = {
				modifier = {
					factor = 9
					gender = male
				}
				set_leader_flag = presents_masc
				if = {
					limit = { has_global_flag = nonbinary_leaders_enable_tracing }
					if = {
						limit = { gender = male }
						log = "...\\[This.GetSubjectPronoun] already presented as masculine."
					}
					else = {
						log = "...\\[This.GetSubjectPronoun] now present\\[This.GetSXX] as masculine."
					}
				}
			}
		}
	}
}

# changes a gender's leader to match the norms for their species (possibly cloning and replacing them)
# this = leader, with new species
# from = species, previous
leader_match_gender_to_species = {
	optimize_memory
	species = {
		switch = {
			trigger = species_gender
			female = {
				prev = {
					if = {
						limit = { NOT = { gender = female } }
						set_gender = female
					}
				}
			}
			male = {
				prev = {
					if = {
						limit = { NOT = { gender = male } }
						set_gender = male
					}
				}
			}
			indeterminable = {
				prev = {
					if = {
						limit = { NOT = { gender = indeterminable } }
						set_gender = indeterminable
					}
				}
			}
			not_set = {
				prev = {
					if = {
						limit = {
							species_class_uses_gender = yes
							NOR = {
								gender = female
								gender = male
							}
						}
						random_list = {
							50 = { set_gender = female }
							50 = { set_gender = male }
						}
					}
				}
			}
		}
	}
}

# any scope, but you need to escape strings with spaces "\"my string\"" or it will break here
log_if_enabled = {
	optimize_memory
	if = {
		limit = { has_global_flag = nonbinary_leaders_enable_tracing }
		log = $MESSAGE$
	}
}