# this = species
species_class_uses_gender = {
	optimize_memory
	# NOTE: this assumes custom species classes use gender (the default)
	NOR = {
		is_species_class = MACHINE
		is_species_class = ROBOT
		is_species_class = AI # contingency
		is_species_class = SWARM # praethoryn
		is_species_class = EXD # extradimensionals: unbidden/aberrant/vehement
		is_species_class = SALVAGER # salvager enclave species
		is_species_class = SHROUDWALKER # shroudwalker enclave species
	}
}

is_custom_species_class = {
	optimize_memory
	species = {
		NOR = {
			is_species_class = HUM
			is_species_class = MAM
			is_species_class = PRE_MAM
			is_species_class = REP
			is_species_class = PRE_REP
			is_species_class = AVI
			is_species_class = PRE_AVI
			is_species_class = ART
			is_species_class = PRE_ART
			is_species_class = FUN
			is_species_class = PRE_FUN
			is_species_class = MOL
			is_species_class = PRE_MOL
			is_species_class = AQUATIC
			is_species_class = PRE_AQUATIC
			is_species_class = NECROID
			is_species_class = PRE_NECROID
			is_species_class = LITHOID
			is_species_class = PRE_LITHOID
			is_species_class = PLANT
			is_species_class = PRE_PLANT
			is_species_class = PRE_TOX
			is_species_class = TOX
			is_species_class = MACHINE
			is_species_class = ROBOT
			is_species_class = AI # contingency
			is_species_class = SWARM # praethoryn
			is_species_class = EXD # extradimensionals: unbidden/aberrant/vehement
			is_species_class = SALVAGER # salvager enclave species
			is_species_class = SHROUDWALKER # shroudwalker enclave species
		}
	}
}

# leader
allows_fem_portraits_leader = {
	optimize_memory
	allows_fem_portraits_pop = yes
	OR = {
		AND = {
			exists = species
			species = { species_gender = female }
		}
		AND = {
			gender = female
			NOT = { has_leader_flag = presents_masc }
		}
		has_leader_flag = presents_fem
		AND = {
			gender = indeterminable
			has_gender_presentation_flag = no
		}
	}
}

# species
allows_fem_portraits_species = {
	optimize_memory
	NOT = { species_gender = male }
}

# pop/leader
allows_fem_portraits_pop = {
	optimize_memory
	exists = species
	species = { allows_fem_portraits_species = yes }
}

# leader
allows_masc_portraits_leader = {
	optimize_memory
	allows_masc_portraits_pop = yes
	OR = {
		AND = {
			exists = species
			species = { species_gender = male }
		}
		AND = {
			gender = male
			NOT = { has_leader_flag = presents_fem }
		}
		has_leader_flag = presents_masc
		AND = {
			gender = indeterminable
			has_gender_presentation_flag = no
		}
	}
}

# species
allows_masc_portraits_species = {
	optimize_memory
	NOT = { species_gender = female }
}

# pop/leader
allows_masc_portraits_pop = {
	optimize_memory
	exists = species
	species = { allows_masc_portraits_species = yes }
}

# requires leader scope
has_gender_presentation_flag = {
	optimize_memory
	OR = {
		has_leader_flag = presents_fem
		has_leader_flag = presents_masc
	}
}

# requires leader scope
has_gender_identity_flag = {
	OR = {
		has_leader_flag = gender_indeterminable
		has_leader_flag = gender_female
		has_leader_flag = gender_male
	}
}

# requires leader scope
should_roll_to_reconsider_gender_identity = {
	optimize_memory
	species = {
		NOR = {
			species_gender = indeterminable
			has_trait = trait_clone_soldier_infertile
			has_trait = trait_clone_soldier_infertile_full_potential
			AND = {
				species_gender = not_set
				species_class_uses_gender = no
			}
		}
	}
}

# this = species
species_can_set_is_female = {
	optimize_memory
	NOR = {
		species_gender = indeterminable
		AND = {
			species_gender = not_set
			species_class_uses_gender = no
		}
	}
}

# this = leader, with new species
# from = species, previous
leader_species_gender_change_requires_clone = {
	optimize_memory
	OR = {
		AND = {
			species = { species_can_set_is_female = no }
			from = { species_can_set_is_female = yes }
		}
		AND = {
			species = { species_can_set_is_female = yes }
			from = { species_can_set_is_female = no }
		}
	}
}