namespace = nonbinary_leaders

# flag mod as active
event = {
	id = nonbinary_leaders.13
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_global_flag = nonbinary_leaders_installed }
	}
	immediate = {
		set_global_flag = nonbinary_leaders_installed
	}
}

# log info about every owned and pool leader
# root = country
country_event = {
	id = nonbinary_leaders.1000
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		log = "Owned Leaders"
		every_owned_leader = {
			print_leader_info = yes
		}

		log = "Pool Leaders"
		every_pool_leader = {
			print_leader_info = yes
		}
	}
}

# triggered by on_leader_spawned
# root = country
# from = leader
country_event = {
	id = nonbinary_leaders.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = disable_gender_clones_on_leader_spawned } # not if
		any_playable_country = { is_country = prev } # only for playable country types
		# only triggers in presence of the flag or after at least 1 day has passed in order to avoid changing the gender identity of starting rulers
		OR = {
			has_country_flag = nonbinary_leaders_game_begun
			days_passed > 0
		}
		exists = from
		from = {
			NOT = { has_leader_flag = leader_replaced_by_clone } # in case something else already cloned the leader
			should_roll_to_reconsider_gender_identity = yes
		}
		any_pool_leader = { is_same_value = from }
	}
	immediate = {
		from = {
			save_event_target_as = leader_to_clone
			set_timed_leader_flag = {
				flag = clone_should_be_recruitable
				days = 1
			} 
		}
		log_if_enabled = { MESSAGE = "\"nonbinary_leaders.1 detected spawned leader \\[leader_to_clone.GetTitle] \\[leader_to_clone.GetName] of gendered species class \\[leader_to_clone.GetSpeciesClassOrCustom]...\"" }
		log_if_enabled = { MESSAGE = "\"...and [leader_to_clone.GetSubjectPronoun] initially identif[leader_to_clone.GetIesY] as [leader_to_clone.GetSubjectPronoun]/[leader_to_clone.GetObjectPronoun]/[leader_to_clone.GetPossPronoun].\"" }
		random_list = {
			10 = {
				modifier = {
					factor = 8
					NOT = { has_global_flag = nonbinary_leaders_force_all_spawned }
					event_target:leader_to_clone.species = { species_gender = indeterminable }
				}
				log_if_enabled = { MESSAGE = "\"...[leader_to_clone.GetName] chose to identify as nonbinary.\"" }
				clone_leader_with_gender = { GENDER = indeterminable }
			}
			10 = {
				modifier = {
					factor = 8
					NOT = { has_global_flag = nonbinary_leaders_force_all_spawned }
					event_target:leader_to_clone = {
						OR = {
							species = { species_gender = female }
							AND = {
								gender = female
								species = { species_gender = not_set }
							}
						}
					}
				}
				log_if_enabled = { MESSAGE = "\"...[leader_to_clone.GetName] chose to identify as female.\"" }
				clone_leader_with_gender = { GENDER = female }
			}
			10 = {
				modifier = {
					factor = 8
					NOT = { has_global_flag = nonbinary_leaders_force_all_spawned }
					event_target:leader_to_clone = {
						OR = {
							species = { species_gender = male }
							AND = {
								gender = male
								species = { species_gender = not_set }
							}
						}
					}
				}
				log_if_enabled = { MESSAGE = "\"...[leader_to_clone.GetName] chose to identify as male.\"" }
				clone_leader_with_gender = { GENDER = male }
			}
		}
	}
}

# triggered by on_press_begin
# root = country
country_event = {
	id = nonbinary_leaders.2
	is_triggered_only = yes
	hide_window = yes
	fire_only_once = yes
	trigger = { NOT = { has_country_flag = nonbinary_leaders_game_begun } }
	immediate = {
		set_country_flag = nonbinary_leaders_game_begun
	}
}

# toggle tracing
event = {
	id = nonbinary_leaders.3
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { has_global_flag = nonbinary_leaders_enable_tracing }
			remove_global_flag = nonbinary_leaders_enable_tracing
		}
		else = {
			set_global_flag = nonbinary_leaders_enable_tracing
		}
	}
}

# toggle force all leaders to re-evaluate
event = {
	id = nonbinary_leaders.4
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { has_global_flag = nonbinary_leaders_force_all_spawned }
			remove_global_flag = nonbinary_leaders_force_all_spawned
		}
		else = {
			set_global_flag = nonbinary_leaders_force_all_spawned
		}
	}
}